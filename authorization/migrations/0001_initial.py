# Generated by Django 4.0.7 on 2024-10-17 14:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50, verbose_name='Name')),
                ('is_internal', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserEnvironmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os', models.CharField(blank=True, max_length=50, null=True, verbose_name='OS')),
                ('os_version', models.CharField(blank=True, max_length=20, null=True, verbose_name='OS Version')),
                ('ip_address', models.CharField(blank=True, max_length=20, null=True, verbose_name='IP Address')),
                ('browser', models.CharField(blank=True, max_length=50, null=True, verbose_name='Browser')),
                ('browser_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Browser Version')),
                ('device_type', models.CharField(blank=True, choices=[('PC', 'PC'), ('MOBILE', 'MOBILE'), ('TABLET', 'TABLET'), ('BOT', 'BOT')], max_length=6, null=True, verbose_name='Device Type')),
                ('device', models.CharField(blank=True, max_length=50, null=True, verbose_name='Device')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField(verbose_name='JWT Token')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='Last Login')),
                ('last_logout', models.DateTimeField(blank=True, null=True, verbose_name='Last Logout')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_info', to=settings.AUTH_USER_MODEL)),
                ('user_env_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='authorization.userenvironmentdetails')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('label', models.CharField(blank=True, max_length=50, null=True, verbose_name='Label')),
                ('is_default', models.BooleanField(default=False)),
                ('permissions', models.ManyToManyField(blank=True, related_name='associated_roles', to='authorization.permission')),
                ('role_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authorization.role')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_code', models.CharField(max_length=8, verbose_name='Password Verification Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('reset_at', models.DateTimeField(blank=True, null=True, verbose_name='Reset At')),
                ('is_password_reset', models.BooleanField(default=False, verbose_name='Is Password Reset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountVerificationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_code', models.CharField(max_length=8, verbose_name='Verification Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Verified At')),
                ('is_account_verified', models.BooleanField(default=False, verbose_name='Is Account Verified')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_verification_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_email', models.EmailField(max_length=254, verbose_name='New Email')),
                ('verification_code', models.CharField(max_length=8, verbose_name='Verification Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('changed_at', models.DateTimeField(blank=True, null=True, verbose_name='Changed At')),
                ('is_email_changed', models.BooleanField(default=False, verbose_name='Is Email Changed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_change_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'verification_code')},
            },
        ),
    ]
